(function($, Drupal) {
  var isMaximized = false;
  Drupal.behaviors.ckeditorSelect = {
    attach: function(context) {
      // Only when direction is rtl.
      if ($("html").attr("dir") == "rtl") {
        CKEDITOR.on("instanceReady", function(event) {
          var instance = event.editor;
          instance.on("maximize", function(e) {
            isMaximized = e.data == 1 ? true : false;
          });
          $(".cke_combo_button").on("click", function() {
            // Don't run this code if the ckeditor is not maximized.
            if (!isMaximized) return;

            setTimeout(() => {
              var comboPanel = $('.cke_combopanel[role="presentation"]');
              var buttonLeft = $(this).offset().left;
              comboPanel.css("left", -$(".cke_inner").width() + buttonLeft);
            });
          });
        });
      }

      // CKEDITOR Autogrow.
      if (typeof CKEDITOR !== "undefined") {
        CKEDITOR.config.autoGrow_maxHeight = 0.8 * window.innerHeight;
      }
    }
  };
})(jQuery, Drupal);
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function (Drupal, drupalSettings) {
  Drupal.behaviors.activeLinks = {
    attach: function attach(context) {
      var path = drupalSettings.path;
      var queryString = JSON.stringify(path.currentQuery);
      var querySelector = path.currentQuery ? '[data-drupal-link-query=\'' + queryString + '\']' : ':not([data-drupal-link-query])';
      var originalSelectors = ['[data-drupal-link-system-path="' + path.currentPath + '"]'];
      var selectors = void 0;

      if (path.isFront) {
        originalSelectors.push('[data-drupal-link-system-path="<front>"]');
      }

      selectors = [].concat(originalSelectors.map(function (selector) {
        return selector + ':not([hreflang])';
      }), originalSelectors.map(function (selector) {
        return selector + '[hreflang="' + path.currentLanguage + '"]';
      }));

      selectors = selectors.map(function (current) {
        return current + querySelector;
      });

      var activeLinks = context.querySelectorAll(selectors.join(','));
      var il = activeLinks.length;
      for (var i = 0; i < il; i++) {
        activeLinks[i].classList.add('is-active');
      }
    },
    detach: function detach(context, settings, trigger) {
      if (trigger === 'unload') {
        var activeLinks = context.querySelectorAll('[data-drupal-link-system-path].is-active');
        var il = activeLinks.length;
        for (var i = 0; i < il; i++) {
          activeLinks[i].classList.remove('is-active');
        }
      }
    }
  };
})(Drupal, drupalSettings);;
